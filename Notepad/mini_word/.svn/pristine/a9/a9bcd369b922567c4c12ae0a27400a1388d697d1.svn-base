package cn.miniword.util;

import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;

public class FileUtility {

	/**
     * 打开文件,
     * 若用户选择，
     * 返回文件对象;
     * 否则，
     * 返回null
     */
    public static File openFile() {
    	File file = null;
    	FileDialog open = new FileDialog(new JFrame(), "打开文件对话框", FileDialog.LOAD);
        open.setVisible(true);
        if (open.getFile() != null) {
            file = new File(open.getDirectory(), open.getFile());
        }
        return file;
    }
    
    /**
     * 另存为 操作
     * @throws IOException 
     */
    public static void saveAs(String content){
    	FileDialog save = new FileDialog(new JFrame(), "保存文件对话框", FileDialog.SAVE); //保存、打开的窗口
        save.setVisible(true);
        if (save.getFile() != null) {
            File file = new File(save.getDirectory(),save.getFile());
            writeFile(file,content);
        }
    }
    
    /**
     * 保存操作
     */
    public static void saveFile(String filePath,String content) {
    	String folder = getFolderPath(filePath);
    	if (filePath != null && folder != null) {
            File file = new File(folder,filePath);
            if (file.exists()) {
               try {
				file.createNewFile();
				writeFile(file, content);
				} catch (IOException e) {
					e.printStackTrace();
				}
            }
        } else 
            saveAs(content);
    }
    
    private static void writeFile(File file,String content)
    {
    	FileWriter fw;
		try {
			fw = new FileWriter(file);
			BufferedWriter bw = new BufferedWriter(fw);
	        bw.write(content, 0, content.length());
	        bw.flush();
	        bw.close();
	        fw.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
    }

	/**
	 * @param filePath : 文件绝对路径
	 * @return 文件所在目录路径
	 */
	public static String getFolderPath(String filePath)
	{
		int index = filePath.lastIndexOf('/');
		return index >= 0 ? filePath.substring(0, index + 1) : null;
	}

	/**
	 * @param file : 要读取的文件
	 * @return 该文件的所有内容
	 */
	private static List<String> readFileContent(File file)
	{
		List<String> content = new ArrayList<String>();
		try {
	        FileReader fr = new FileReader(file);
	        String encoding = fr.getEncoding();
	        InputStreamReader inputStreamReader = new InputStreamReader(new FileInputStream(file),encoding);
	        BufferedReader br = new BufferedReader(inputStreamReader);
	        String s = "";
	        while ((s = br.readLine())!= null) {
	            content.add(s);
	        }
	        fr.close();
	        inputStreamReader.close();
	        br.close();
	    } catch (FileNotFoundException e) {
	        e.printStackTrace();
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
		return content;
	}
}
